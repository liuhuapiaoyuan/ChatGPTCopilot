{"prompt": "// Path: test.js\n// Compare this snippet from client/src/componentUI/TableForm/Transfer/operation.js:\n//  */\n// \n// import React from 'react';\n// import {Button , Icon} from 'antd';\n// \n// \n// \n// \n// /**\n//  * TransferOperation \u7ec4\u4ef6.\n//  * @class\n//  * @extends React.Component\n//  * @param {Object} props - \u7ec4\u4ef6\u7684 props \u5bf9\u8c61.\n//  * @param {string} [props.className] - \u7ec4\u4ef6\u7684\u7c7b\u540d.\n//  * @param {string} [props.leftArrowText] - \u5de6\u7bad\u5934\u6309\u94ae\u7684\u6587\u672c.\n//  * @param {string} [props.rightArrowText] - \u53f3\u7bad\u5934\u6309\u94ae\u7684\u6587\u672c.\n//  * @param {Function} [props.moveToLeft] - \u79fb\u52a8\u9879\u76ee\u5230\u5de6\u4fa7\u5217\u8868\u7684\u4e8b\u4ef6\u5904\u7406\u51fd\u6570.\n//  * @param {Function} [props.moveToRight] - \u79fb\u52a8\u9879\u76ee\u5230\u53f3\u4fa7\u5217\u8868\u7684\u4e8b\u4ef6\u5904\u7406\u51fd\u6570.\n//  * @param {boolean} [props.leftActive] - \u5de6\u7bad\u5934\u6309\u94ae\u662f\u5426\u53ef\u7528.\n//  * @param {boolean} [props.rightActive] - \u53f3\u7bad\u5934\u6309\u94ae\u662f\u5426\u53ef\u7528.\n//  */\n// export default class TransferOperation extends React.Component {\n//   static defaultProps = {\n//     leftArrowText: '',\n//     rightArrowText: '',\n//     moveToLeft: noop,\n//     moveToRight: noop,\n//   };\n// \n//   render() {\n//     const {\n//       moveToLeft,\n//       moveToRight,\n//       leftArrowText,\n//       rightArrowText,\n//       leftActive,\n//       rightActive,\n//       className,\n//     } = this.props;\n// \n//     const moveToLeftButton = (\n//       <Button type=\"primary\" size=\"small\" disabled={!leftActive} onClick={moveToLeft}>\n//         <span><Icon type=\"left\" />{leftArrowText}</span>\n//       </Button>\n//     );\n//     const moveToRightButton = (\n//       <Button type=\"primary\" size=\"small\" disabled={!rightActive} onClick={moveToRight}>\n//         <span>{rightArrowText}<Icon type=\"right\" /></span>\n//       </Button>\n//     );\n//     return (\n//       <div className={className}>\n//         {moveToLeftButton}\n//         {moveToRightButton}\n//       </div>\n//     );\n//   }\n// }\n// \n \n\n// \u5b9a\u4e49\u4e00\u4e2a\u6811\u5f62\u7ed3\u6784 \nlet TreeNode = function(value) {\n    this.value = value;\n    this.left = null;\n    this.right = null;\n};\n\n// \u521b\u5efa\u4e00\u4e2a\u6811\nlet root = new TreeNode(1);\nlet node2 = new TreeNode(2);\nlet node3 = new TreeNode(3);\nlet node4 = new TreeNode(4);\nlet node5 = new TreeNode(5);\n\nroot.left = node2;\nroot.right = node3;\nnode2.left = node4;\nnode2.right = node5;\nlet inorderTraversal = function(root) {\n    let result = [];\n    let stack = [];\n    let current = root;\n    while (current !== null || stack.length > 0) {\n        while (current !== null) {\n            stack.push(current);\n            current = current.left;\n        }\n        current = stack.pop();\n        result.push(current.value);\n        current = current.right;\n    }\n    return result;\n};\n\nconsole.log(inorderTraversal(root)); // Output: [4, 2, 5, 1, 3]\n\n\n//\u589e\u52a0\u4e00\u4e2a\u5192\u6ce1\u6392\u5e8f\n", "suffix": "// \u5199\u4e00\u4e2a\u5feb\u901f\u6392\u5e8f\r\nfunction quickSort(arr) {\r\n    if (arr.length <= 1) {\r\n        return arr;\r\n    }\r\n    let pivotIndex = Math.floor(arr.length / 2);\r\n    let pivot = arr.splice(pivotIndex, 1)[0];\r\n    let left = [];\r\n    let right = [];\r\n    for (let i = 0; i < arr.length; i++) {\r\n        if (arr[i] < pivot) {\r\n            left.push(arr[i]);\r\n        } else {\r\n            right.push(arr[i]);\r\n        }\r\n    }\r\n    return quickSort(left).concat([pivot], quickSort(right));\r\n}", "max_tokens": 500, "temperature": 0.2, "top_p": 1, "n": 1, "stop": ["\n\n\n"], "stream": true, "extra": {"language": "javascript", "next_indent": 0, "trim_by_indentation": true, "prompt_tokens": 761, "suffix_tokens": 131}}